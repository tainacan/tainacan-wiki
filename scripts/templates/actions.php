<?php
/**
 * Markdown Template
 *
 * @link      https://guides.github.com/features/mastering-markdown/
 * @author    Pronamic <info@pronamic.eu>
 * @copyright 2005-2022 Pronamic
 * @license   GPL-3.0-or-later
 * @package   Pronamic\WordPress\Documentor
 */

namespace Pronamic\WordPress\Documentor;

if ( ! isset( $documentor ) ) {
	return;
}

$actions = $documentor->get_actions();

$eol = "\n";

echo '# Tainacan Actions', $eol;

echo $eol;

echo 'WordPress actions are hooks that allow you to execute custom code at specific points during the WordPress lifecycle. In Tainacan, actions enable developers to extend or modify plugin behavior without altering core files. To use an action, attach your custom function to a specific hook using the `add_action()` function:', $eol, $eol;

echo '```php', $eol;
echo "add_action( 'tainacan-some-action', 'your_callback_function', 10, 2 );", $eol;
echo 'function your_callback_function( $arg1, $arg2 ) {', $eol;
echo '    // Your custom code here', $eol;
echo '}', $eol;
echo '```', $eol, $eol;

echo 'Refer to the list below for available Tainacan actions and their usage.', $eol, $eol;

echo $eol;

if ( empty( $actions ) ) {
	echo '*This project does not contain any WordPress actions.*', $eol;
	echo $eol;
} else {
	foreach ( $actions as $hook ) {
		include __DIR__ . '/parts/markdown-hook.php';
	}
}

echo '<p align="center">';

printf(
	'<a href="%s"><img src="%s" alt="Pronamic WordPress Documentor" width="32" height="32"></a>',
	'https://github.com/pronamic/wp-documentor',
	'https://cdn.jsdelivr.net/gh/pronamic/wp-documentor@main/logos/pronamic-wp-documentor.svgo-min.svg'
);

echo '<br>';

printf(
	'<em>Generated by <a href="%s">Pronamic WordPress Documentor</a> <code>%s</code></em>',
	'https://github.com/pronamic/wp-documentor',
	'1.2.0'
);

echo '<p>';

echo $eol;
